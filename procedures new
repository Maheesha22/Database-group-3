============================================================================================================
ATTENDANCE WITH PERCENTAGE AND ELIGIBILITY BY GIVING REGISTRATION NUMBER
============================================================================================================
DELIMITER //

CREATE PROCEDURE GetStudentAttendance(IN reg_no CHAR(10))
BEGIN
    SELECT
        Student.Stu_id,
        Student.Name,
        Student.Email,
        Attendance_percentage.Course_code,
        Attendance_percentage.Attendance_Percentage,
        CASE
            WHEN Attendance_percentage.Attendance_Percentage > 80.0000 THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS Attendance_Eligibility
    FROM
        Student
    JOIN
        Attendance_percentage ON Student.Stu_id = Attendance_percentage.Stu_id
    WHERE
        Student.Stu_id = reg_no;
END //

DELIMITER ;

call GetStudentAttendance('stu_22_01');
-------------------------------------------------------------------------------------------------------

=======================================================================================================
BY GIVING REGISTRATION NUMBER AND COURSE CODE
=======================================================================================================

DELIMITER //

CREATE PROCEDURE StudentAttendance(IN reg_no CHAR(10), IN course_code CHAR(10))
BEGIN
    SELECT
        Student.Stu_id,
        Student.Name,
        Student.Email,
        Attendance_percentage.Course_code,
        Attendance_percentage.Attendance_Percentage,
        CASE
            WHEN Attendance_percentage.Attendance_Percentage > 80.0000 THEN 'Eligible'
            ELSE 'Not Eligible'
        END AS Attendance_Eligibility
    FROM
        Student
    JOIN
        Attendance_percentage ON Student.Stu_id = Attendance_percentage.Stu_id
    WHERE
        Student.Stu_id = reg_no
        AND Attendance_percentage.Course_code = course_code;
END //

DELIMITER ;

CALL StudentAttendance('stu_22_01', 'ENG1222');

----------------------------------------------------------------------------------------------------------------


=================================================================================================================
CREATE PROCEDURE FOR CA MARKS BY GIVING REGISTRATION NO FOR WHOLE BATCH
=================================================================================================================

DELIMITER //

CREATE PROCEDURE GetCAsummary(IN Stu_id CHAR(10))
BEGIN
	SELECT
		CA_marks.stu_id,
        	CA_marks.course_code,
        	CA_marks.total_CA_marks,
        	CA_marks_percentage.CA_marks_percentage
	FROM
		CA_marks,CA_marks_percentage
	WHERE
		CA_marks.stu_id = CA_marks_percentage.stu_id
        	AND CA_marks.course_code = CA_marks_percentage.course_code
		AND ( CA_marks.stu_id = stu_id)
	GROUP BY 	
       		CA_marks.stu_id, CA_marks.course_code;
END //

DELIMITER ;

CALL GetCAsummary('stu_22_01');

--------------------------------------------------------------------------------------------------------------------

====================================================================================================================
CREATE PROCEDURE FOR CA MARKS BY GIVING COURSE CODE FOR WHOLE BATCH
====================================================================================================================

DELIMITER //

CREATE PROCEDURE GetCAMarksSummary(IN course_code CHAR(10))
BEGIN
    SELECT
        CA_marks.stu_id,
        CA_marks.course_code,
        CA_marks.total_CA_marks,
        CA_marks_percentage.CA_marks_percentage
       
    FROM
        CA_marks
    JOIN
        CA_marks_percentage ON CA_marks.stu_id = CA_marks_percentage.stu_id
        AND CA_marks.course_code = CA_marks_percentage.course_code
    WHERE
        CA_marks.course_code = course_code
    GROUP BY
        CA_marks.stu_id, CA_marks.course_code;
END //

DELIMITER ;

CALL GetCAMarksSummary('ICT1222');

--------------------------------------------------------------------------------------------------------------------------------

===============================================================================================================================================
 GET GRADES OF A STUDENT FOR ALL THE SUBJECT BY REG_NO(INDIVIDUAL)
===============================================================================================================================================

DELIMITER //

CREATE PROCEDURE GetStudentGrade(IN REG_NO VARCHAR (10))
BEGIN
    SELECT
        Final_marks.Stu_id,
        Final_marks.course_code,
        Final_marks.FINAL_MARK,
        Student.Status,
        IF(Medical.Reason = 'EXAM', 'MC',
            IF(Student.Status = 'repeat', 'C',
            IF(Final_marks.FINAL_MARK >= 90, 'A+',
            IF(Final_marks.FINAL_MARK >= 84, 'A',
            IF(Final_marks.FINAL_MARK >= 75, 'A-',
            IF(Final_marks.FINAL_MARK >= 70, 'B+',
            IF(Final_marks.FINAL_MARK >= 65, 'B',
            IF(Final_marks.FINAL_MARK >= 60, 'B-',
            IF(Final_marks.FINAL_MARK >= 55, 'C+',
            IF(Final_marks.FINAL_MARK >= 50, 'C',
            IF(Final_marks.FINAL_MARK >= 45, 'C-',
            IF(Final_marks.FINAL_MARK >= 40, 'D+',
            IF(Final_marks.FINAL_MARK >= 35, 'D', 'F'))))))))))))) AS Grade
    FROM
        Final_marks
    JOIN
        Student ON Final_marks.Stu_id = Student.Stu_id
    LEFT JOIN
        Medical ON Final_marks.Stu_id = Medical.Stu_id AND Final_marks.course_code = Medical.Course_code
    WHERE
        Final_marks.Stu_id = REG_NO
        AND (Medical.Reason IS NULL OR Medical.Reason = 'EXAM');
END //

DELIMITER ;

CALL GETSTUDENTGRADE('STU_22_01');



